(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    206578,       4747]
NotebookOptionsPosition[    198472,       4598]
NotebookOutlinePosition[    199141,       4620]
CellTagsIndexPosition[    199035,       4615]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<OGre.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"NotebookDirectory", "[", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88594506003613*^9, 3.885945079299857*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8c799480-e33e-418b-8823-47b558cb35cd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{"\"OGRe: An \"", 
        StyleBox["\"O\"", Underlined, StripOnInput -> False], 
        "\"bject-Oriented \"", 
        StyleBox["\"G\"", Underlined, StripOnInput -> False], "\"eneral \"", 
        StyleBox["\"Re\"", Underlined, StripOnInput -> False], 
        "\"lativity Package for Mathematica\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->Larger,
      FontWeight->Bold]},
    {
     StyleBox[
      TemplateBox[{"\"By Barak Shoshany (\"", 
        TemplateBox[{"\"baraksh@gmail.com\"", "mailto:baraksh@gmail.com"}, 
         "HyperlinkURL"], "\") (\"", 
        TemplateBox[{"\"baraksh.com\"", "https://baraksh.com/"}, 
         "HyperlinkURL"], "\")\""},
       "RowDefault"],
      StripOnInput->False,
      FontWeight->Bold]},
    {
     StyleBox[
      TemplateBox[{"\"v1.7.0 (2021-09-17)\""},
       "RowDefault"],
      StripOnInput->False,
      FontWeight->Bold]},
    {
     StyleBox[
      TemplateBox[{"\"GitHub repository: \"", 
        TemplateBox[{
         "\"https://github.com/bshoshany/OGRe\"", 
          "https://github.com/bshoshany/OGRe"}, "HyperlinkURL"]},
       "RowDefault"],
      StripOnInput->False,
      FontWeight->Bold]},
    {
     TemplateBox[{
      "\"\[Bullet] To view the full documentation for the package, type \"", 
       ButtonBox[
        TagBox[
         PaneSelectorBox[{
          False -> StyleBox[
            "\"TDocs[]\"", "Hyperlink", StripOnInput -> False], True -> 
           StyleBox["\"TDocs[]\"", "HyperlinkActive", StripOnInput -> False]}, 
          Dynamic[
           CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
          0], 
         MouseAppearanceTag["LinkHand"]], ButtonFunction :> OGRe`TDocs[], 
        Appearance -> "Frameless", BaseStyle -> "Hyperlink", Evaluator -> 
        Automatic, Method -> "Preemptive"], "\".\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"\[Bullet] To list all available modules, type \"", 
       ButtonBox[
        TagBox[
         PaneSelectorBox[{
          False -> StyleBox[
            "\"?OGRe`*\"", "Hyperlink", StripOnInput -> False], True -> 
           StyleBox["\"?OGRe`*\"", "HyperlinkActive", StripOnInput -> False]}, 
          Dynamic[
           CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
          0], 
         MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
        OGRe`Private`OGRePrint[
          Information["OGRe`*"]], Appearance -> "Frameless", BaseStyle -> 
        "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"], "\".\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"\[Bullet] To get help on a particular module, type \"", 
       StyleBox["\"?\"", "Input", StripOnInput -> False], 
       "\" followed by the module name.\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"\[Bullet] To enable parallelization, type \"", 
       ButtonBox[
        TagBox[
         PaneSelectorBox[{
          False -> StyleBox[
            "\"TSetParallelization[True]\"", "Hyperlink", StripOnInput -> 
             False], True -> 
           StyleBox[
            "\"TSetParallelization[True]\"", "HyperlinkActive", StripOnInput -> 
             False]}, 
          Dynamic[
           CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
          0], 
         MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
        OGRe`TSetParallelization[True], Appearance -> "Frameless", BaseStyle -> 
        "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"], "\".\""},
      "RowDefault"]},
    {
     TemplateBox[{"\"\[Bullet] \"", 
       TemplateBox[{
         DynamicBox[
          ToBoxes[OGRe`Private`UpdateMessage, StandardForm], 
          ImageSizeCache -> {307.3408203125, {3., 9.}}], 
         "\" To disable automatic checks for updates at startup, type \"", 
         ButtonBox[
          TagBox[
           
           PaneSelectorBox[{
            False -> StyleBox[
              "\"TSetAutoUpdates[False]\"", "Hyperlink", StripOnInput -> 
               False], True -> 
             StyleBox[
              "\"TSetAutoUpdates[False]\"", "HyperlinkActive", StripOnInput -> 
               False]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], 
           MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
          OGRe`TSetAutoUpdates[False], Appearance -> "Frameless", BaseStyle -> 
          "Hyperlink", Evaluator -> Automatic, Method -> "Preemptive"], 
         "\".\""}, "RowDefault"]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8862053250621367`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"dc8eaa5c-b2cb-43c9-bea7-590e11e2b7f4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TSetReservedSymbols", "[", 
   RowBox[{"{", 
    RowBox[{
    "t", ",", "r", ",", "\[Theta]", ",", "\[Phi]", ",", "x", ",", "y", ",", 
     "z"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TNewCoordinates", "[", 
   RowBox[{"\"\<Spherical\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TNewCoordinates", "[", 
   RowBox[{"\"\<Cartesian\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x", ",", "y", ",", "z"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TNewMetric", "[", 
   RowBox[{"\"\<Minkowski\>\"", ",", "\"\<Cartesian\>\"", ",", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "1"}], "}"}], "]"}], ",", 
    "\"\<\[Eta]\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TNewMetric", "[", 
   RowBox[{"\"\<Schwarzschild\>\"", ",", "\"\<Spherical\>\"", ",", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", " ", "M"}], "r"]}], ")"}]}], ",", 
       FractionBox["1", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", " ", "M"}], "r"]}]], ",", 
       SuperscriptBox["r", "2"], ",", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}], "]"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.886042125996048*^9, 3.8860421277299876`*^9}, {
  3.8862053474022923`*^9, 3.8862053813176627`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"653be590-d6d7-46df-8b3b-fb0624bc1968"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "OGRe`*"}]], "Input",
 CellChangeTimes->{{3.8860376820067234`*^9, 3.8860376825445538`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3b8f3a23-4dc2-42dd-a5c0-e3a009444b98"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["OGRe`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["OGRe`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["TAddCoordTransformation", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TAddCoordTransformation", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TChangeSymbol", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TChangeSymbol", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TNewCoordinates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TNewCoordinates", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalc", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalc", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TCheckForUpdates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCheckForUpdates", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TNewMetric", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TNewMetric", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcChristoffel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcChristoffel", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TCite", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCite", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TNewTensor", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TNewTensor", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcEinsteinTensor", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcEinsteinTensor", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TCovariantD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCovariantD", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TPartialD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TPartialD", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["TCalcGeodesicFromChristoffel", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcGeodesicFromChristoffel", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TDelete", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TDelete", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetAllowOverwrite", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetAllowOverwrite", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["TCalcGeodesicFromLagrangian", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcGeodesicFromLagrangian", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TDocs", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TDocs", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetAssumptions", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetAssumptions", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["TCalcGeodesicWithTimeParameter", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcGeodesicWithTimeParameter", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TExport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TExport", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetAutoUpdates", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetAutoUpdates", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcLagrangian", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcLagrangian", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TExportAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TExportAll", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetCurveParameter", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetCurveParameter", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcNormSquared", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcNormSquared", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TGetComponents", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TGetComponents", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetIndexLetters", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetIndexLetters", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcRicciScalar", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcRicciScalar", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TImport", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TImport", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetParallelization", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetParallelization", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcRicciTensor", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcRicciTensor", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TImportAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TImportAll", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSetReservedSymbols", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSetReservedSymbols", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TCalcRiemannTensor", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TCalcRiemannTensor", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TInfo", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TShow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TShow", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TChangeDefaultCoords", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TChangeDefaultCoords", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TLineElement", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TLineElement", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TSimplify", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TSimplify", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TChangeDefaultIndices", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TChangeDefaultIndices", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TList", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TVolumeElementSquared", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TVolumeElementSquared", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["TChangeID", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TChangeID", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["TMessage", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", {
                   "TMessage", "OGRe`"}, False},
                 ButtonNote->"OGRe`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8860376832060795`*^9, 3.886042180736682*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"59a2c52e-0c6a-4cde-a697-dc59830c4e2c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TPartialD[\\\", StyleBox[\\\"index\\\", Bold, Rule[StripOnInput, False]], \
\\\"] represents the partial derivative when used in a tensor expression \
given to TCalc[].\\\"}]], TextCell[Row[List[\\\"TPartialD[\\\", \
Style[\\\"index\\\", Bold], \\\"] represents the partial derivative when used \
in a tensor expression given to TCalc[].\\\"]]]]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"OGRe`TPartialD\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TPartialD[\\\", StyleBox[\\\"index\\\", Bold, Rule[StripOnInput, False]], \
\\\"] represents the partial derivative when used in a tensor expression \
given to TCalc[].\\\"}]], TextCell[Row[List[\\\"TPartialD[\\\", \
Style[\\\"index\\\", Bold], \\\"] represents the partial derivative when used \
in a tensor expression given to TCalc[].\\\"]]]]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*InterpretationBox[Cell[TextData[{\"TPartialD[\", \
StyleBox[\"index\", Bold, Rule[StripOnInput, False]], \"] represents the \
partial derivative when used in a tensor expression given to TCalc[].\"}]], \
TextCell[Row[List[\"TPartialD[\", Style[\"index\", Bold], \"] represents the \
partial derivative when used in a tensor expression given to \
TCalc[].\"]]]]\)", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> "OGRe`TPartialD"|>, 
   False]]], "Print",
 CellTags->
  "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e",ExpressionUUID->"3bcb9b30-94d7-\
487e-81e1-e35300978c94"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.886205428728257*^9, 
  3.88620542925677*^9}},ExpressionUUID->"2afe19ec-b35b-4716-a847-\
b67cb87e52cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewCoordinates", "[", 
  RowBox[{"\"\<2sphere\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88620543398619*^9, 3.8862056030681534`*^9}, {
  3.886205652821207*^9, 3.886205668148831*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"1d6b9b00-8649-45dc-a18a-3710931decb1"],

Cell[BoxData["\<\"2sphere\"\>"], "Output",
 CellChangeTimes->{
  3.886205607837682*^9, {3.8862056537153845`*^9, 3.8862056689471765`*^9}, 
   3.8862057182106633`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ccb3829d-bc14-49f8-8f60-f573b5478055"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewMetric", "[", 
  RowBox[{"\"\<EX1a\>\"", ",", "\"\<2sphere\>\"", ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "}"}], "]"}], ",", 
   "\"\<R\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8862056400078707`*^9, 3.886205647142187*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"98b208fa-ff80-4bc1-851c-1fe48b2f3c24"],

Cell[BoxData["\<\"EX1a\"\>"], "Output",
 CellChangeTimes->{3.886205628911436*^9, 3.88620567411526*^9, 
  3.886205720795306*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d6e305dc-337e-4142-8d7d-89533b36f475"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewTensor", "[", 
  RowBox[{"\"\<EX1aR\>\"", ",", "\"\<EX1a\>\"", ",", "\"\<2sphere\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"+", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "\"\<R\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.886205678666811*^9, 3.886205837765308*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"a08e3df7-e2b1-453b-bb6c-c430da5fbc82"],

Cell[BoxData["\<\"EX1aR\"\>"], "Output",
 CellChangeTimes->{{3.88620570288671*^9, 3.8862057157019415`*^9}, 
   3.886205838743967*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e9b76850-5eeb-4140-9021-b94f6fcd624e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TShow", "@", 
   RowBox[{"TChangeDefaultIndices", "[", 
    RowBox[{"\"\<EX1aR\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8862054090832386`*^9, 3.8862054093594785`*^9}, {
  3.886205796400956*^9, 3.886205798808381*^9}, {3.8862058433512993`*^9, 
  3.8862059151883693`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0ab1bbb5-36ed-4362-a387-b343a9ce1102"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"EX1aR\"", "\":   \"", 
    TemplateBox[{"\"R\"", 
      TemplateBox[{"\"\[Mu]\""}, "RowDefault"], 
      TemplateBox[{
        StyleBox["\"\[Mu]\"", ShowContents -> False, StripOnInput -> False]}, 
       "RowDefault"]}, "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
    "\"(\"", 
    TemplateBox[{",", "\",\"", "\[Theta]", "\[Phi]"}, "RowWithSeparators"], 
    "\")\"", "\" = \"", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
       TagBox[
        GridBox[{{"0"}, {
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}}, RowSpacings -> 1, 
         ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
       "\[NoBreak]", ")"}], 
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]},
   "RowDefault"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886205916782874*^9},
 CellLabel->"OGRe:",ExpressionUUID->"59381a79-632f-4735-b3a3-29ff4a30fb87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TShow", "@", 
  RowBox[{"TCalcChristoffel", "[", "\"\<EX1a\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.886206084879552*^9, 3.886206102224413*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bb969f5f-f41a-4e57-98d9-f2eb218b1cc5"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"EX1aChristoffel\"", "\":   \"", 
    TemplateBox[{"\"\[CapitalGamma]\"", 
      TemplateBox[{
        StyleBox["\"\[Mu]\"", ShowContents -> False, StripOnInput -> False], 
        "\"\[Nu]\"", "\"\[Rho]\""}, "RowDefault"], 
      TemplateBox[{"\"\[Mu]\"", 
        StyleBox["\"\[Nu]\"", ShowContents -> False, StripOnInput -> False], 
        StyleBox["\"\[Rho]\"", ShowContents -> False, StripOnInput -> False]},
        "RowDefault"]}, "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
    "\"(\"", 
    TemplateBox[{",", "\",\"", "\[Theta]", "\[Phi]"}, "RowWithSeparators"], 
    "\")\"", "\" = \"", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             
             GridBox[{{"0"}, {"0"}}, ColumnAlignments -> Center, RowSpacings -> 
              1, ColumnAlignments -> Left], Column], "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             GridBox[{{"0"}, {
                RowBox[{
                  RowBox[{"-", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
                  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}}, RowSpacings -> 1,
               ColumnAlignments -> Center, ColumnAlignments -> Left], Column],
             "\[NoBreak]", ")"}]}, {
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             GridBox[{{"0"}, {
                RowBox[{"Cot", "[", "\[Theta]", "]"}]}}, RowSpacings -> 1, 
              ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
            "\[NoBreak]", ")"}], 
          RowBox[{"(", "\[NoBreak]", 
            TagBox[
             GridBox[{{
                RowBox[{"Cot", "[", "\[Theta]", "]"}]}, {"0"}}, RowSpacings -> 
              1, ColumnAlignments -> Center, ColumnAlignments -> Left], 
             Column], "\[NoBreak]", ")"}]}}, RowSpacings -> 1, ColumnSpacings -> 
        1, RowAlignments -> Baseline, ColumnAlignments -> Center], 
       "\[NoBreak]", ")"}], 
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]},
   "RowDefault"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8862061080180273`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"295f67cc-3d5d-4381-993e-dffe032bbe09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "[", "\"\<EX1aChristoffel\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8862061203068924`*^9, 3.886206146674877*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"92fd06b6-7df6-421a-a85d-1903b84de5f5"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"EX1aChristoffel\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False],
                 "\"\[Phi]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Theta]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Theta]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Phi]\"", "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8862061472099853`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"9858521a-91a8-4b61-b0c4-ec0d71c5d7aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TShow", "@", 
  RowBox[{"TCovariantD", "[", "\"\<EX1aR\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8862059400225086`*^9, 3.886205973238146*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"57eaced7-e5dd-49a4-909d-08de44890495"],

Cell[BoxData[
 RowBox[{"TShow", "[", 
  RowBox[{"TCovariantD", "[", "\<\"EX1aR\"\>", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.886205992210435*^9, 3.8862061578591228`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c6d24662-4641-458d-90b4-a997096d8a26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TCovariantD", "[", "\"\<EX1aR\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8862060232856765`*^9, 3.8862060339451284`*^9}, {
  3.886206066752144*^9, 3.8862060725837126`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"bba9e254-bb78-4f7e-8836-313d91657575"],

Cell[BoxData[
 RowBox[{"TCovariantD", "[", "\<\"EX1aR\"\>", "]"}]], "Output",
 CellChangeTimes->{
  3.8862060345049543`*^9, {3.8862060695079494`*^9, 3.8862060730072327`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"f57063f7-ea07-455f-b0b4-981543d9babe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TNewTensor"}]], "Input",
 CellChangeTimes->{{3.8862072912184396`*^9, 3.886207304918233*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"fa87ed96-1ba8-4d4c-9e51-5c60f5dfcba5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TNewTensor[\\\", StyleBox[\\\"tensorID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\", \
\\\", StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\", \\\
\", StyleBox[\\\"symbol\\\", Bold, Rule[StripOnInput, False]], \\\"] creates \
a new tensor object.\\\\n\\\", StyleBox[\\\"tensorID\\\", Bold, \
Rule[StripOnInput, False]], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\\\n\\\", \
StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \\\" is the \
unique ID of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\" will be used.\\\\n\\\", StyleBox[\\\"indices\\\", Bold, \
Rule[StripOnInput, False]], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\" is a list \
specifying the representation of the tensor with the index configuration \
\\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\" and in \
the coordinate system \\\", StyleBox[\\\"coordinatesID\\\", Bold, \
Rule[StripOnInput, False]], \\\".\\\\n\\\", StyleBox[\\\"symbol\\\", Bold, \
Rule[StripOnInput, False]], \\\" will be used to represent the tensor in \
formulas. If not given, the placeholder \\\\[DottedSquare] will be \
used.\\\"}]], TextCell[Row[List[\\\"TNewTensor[\\\", Style[\\\"tensorID\\\", \
Bold], \\\", \\\", Style[\\\"metricID\\\", Bold], \\\", \\\", \
Style[\\\"coordinatesID\\\", Bold], \\\", \\\", Style[\\\"indices\\\", Bold], \
\\\", \\\", Style[\\\"components\\\", Bold], \\\", \\\", \
Style[\\\"symbol\\\", Bold], \\\"] creates a new tensor object.\\\\n\\\", \
Style[\\\"tensorID\\\", Bold], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", Style[\\\"metricID\\\", Bold], \
\\\" is the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\\\n\\\", Style[\\\"coordinatesID\\\", Bold], \\\" is the unique ID \
of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", Style[\\\"metricID\\\", Bold], \\\" will be used.\\\\n\\\", \
Style[\\\"indices\\\", Bold], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
Style[\\\"components\\\", Bold], \\\" is a list specifying the representation \
of the tensor with the index configuration \\\", Style[\\\"indices\\\", \
Bold], \\\" and in the coordinate system \\\", Style[\\\"coordinatesID\\\", \
Bold], \\\".\\\\n\\\", Style[\\\"symbol\\\", Bold], \\\" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\\\[DottedSquare] will be used.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"TNewTensor", "[", 
                    
                    RowBox[{
                    "OGRe`Private`tensorID_String", ",", 
                    "OGRe`Private`metricID_String", ",", 
                    
                    RowBox[{
                    "OGRe`Private`coordinatesID_String", ":", 
                    "\"_UseDefault_\""}], ",", "OGRe`Private`indices_List", 
                    ",", "OGRe`Private`components_List", ",", 
                    
                    RowBox[{
                    "OGRe`Private`symbol_String", ":", 
                    "\"\[DottedSquare]\""}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "OGRe`Private`useCoords", "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfOverwriting", "[", 
                    "OGRe`Private`tensorID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfMetric", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIndicesForm", "[", 
                    "OGRe`Private`indices", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`coordinatesID", "===", 
                    "\"_UseDefault_\""}], ",", 
                    RowBox[{"OGRe`Private`useCoords", "=", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"DefaultCoords\"", 
                    "]"}]}], ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`coordinatesID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfCoordinates", "[", 
                    "OGRe`Private`coordinatesID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`useCoords", "=", 
                    "OGRe`Private`coordinatesID"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`components", "]"}], 
                    " ", 
                    
                    RowBox[{"ArrayDepth", "[", "OGRe`Private`components", 
                    "]"}]}], "\[NotEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`components", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`useCoords", "]"}], "[", "\"Components\"", 
                    "]"}], "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "OGRe`Private`useCoords"}], 
                    "}"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorDimension"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`indices", "]"}], 
                    "\[NotEqual]", 
                    
                    RowBox[{"ArrayDepth", "[", "OGRe`Private`components", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorRank"}], "MessageName"],
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`indices", "]"}], 
                    "\[NotEqual]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorRank"}], "MessageName"],
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ";", 
                    RowBox[{"OGRe`Private`SetTensorID", "[", 
                    RowBox[{"OGRe`Private`tensorID", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"OGRe`Private`indices", ",", 
                    "OGRe`Private`useCoords"}], "}"}], "\[Rule]", 
                    
                    RowBox[{"OGRe`Private`TensorSimplify", "[", 
                    "OGRe`Private`components", "]"}]}], "]"}]}], ",", 
                    
                    RowBox[{"\"DefaultCoords\"", "\[Rule]", 
                    "OGRe`Private`useCoords"}], ",", 
                    
                    RowBox[{"\"DefaultIndices\"", "\[Rule]", 
                    "OGRe`Private`indices"}], ",", 
                    
                    RowBox[{"\"Metric\"", "\[Rule]", 
                    "OGRe`Private`metricID"}], ",", 
                    RowBox[{"\"Role\"", "\[Rule]", "\"Tensor\""}], ",", 
                    
                    RowBox[{"\"Symbol\"", "\[Rule]", 
                    "OGRe`Private`symbol"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", "OGRe`Private`tensorID", "]"}], 
                    ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"OGRe`TNewTensor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TNewTensor[\\\", StyleBox[\\\"tensorID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\", \
\\\", StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\", \\\
\", StyleBox[\\\"symbol\\\", Bold, Rule[StripOnInput, False]], \\\"] creates \
a new tensor object.\\\\n\\\", StyleBox[\\\"tensorID\\\", Bold, \
Rule[StripOnInput, False]], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\\\n\\\", \
StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \\\" is the \
unique ID of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\" will be used.\\\\n\\\", StyleBox[\\\"indices\\\", Bold, \
Rule[StripOnInput, False]], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\" is a list \
specifying the representation of the tensor with the index configuration \
\\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\" and in \
the coordinate system \\\", StyleBox[\\\"coordinatesID\\\", Bold, \
Rule[StripOnInput, False]], \\\".\\\\n\\\", StyleBox[\\\"symbol\\\", Bold, \
Rule[StripOnInput, False]], \\\" will be used to represent the tensor in \
formulas. If not given, the placeholder \\\\[DottedSquare] will be \
used.\\\"}]], TextCell[Row[List[\\\"TNewTensor[\\\", Style[\\\"tensorID\\\", \
Bold], \\\", \\\", Style[\\\"metricID\\\", Bold], \\\", \\\", \
Style[\\\"coordinatesID\\\", Bold], \\\", \\\", Style[\\\"indices\\\", Bold], \
\\\", \\\", Style[\\\"components\\\", Bold], \\\", \\\", \
Style[\\\"symbol\\\", Bold], \\\"] creates a new tensor object.\\\\n\\\", \
Style[\\\"tensorID\\\", Bold], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", Style[\\\"metricID\\\", Bold], \
\\\" is the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\\\n\\\", Style[\\\"coordinatesID\\\", Bold], \\\" is the unique ID \
of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", Style[\\\"metricID\\\", Bold], \\\" will be used.\\\\n\\\", \
Style[\\\"indices\\\", Bold], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
Style[\\\"components\\\", Bold], \\\" is a list specifying the representation \
of the tensor with the index configuration \\\", Style[\\\"indices\\\", \
Bold], \\\" and in the coordinate system \\\", Style[\\\"coordinatesID\\\", \
Bold], \\\".\\\\n\\\", Style[\\\"symbol\\\", Bold], \\\" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\\\[DottedSquare] will be used.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*InterpretationBox[Cell[TextData[{\"TNewTensor[\", \
StyleBox[\"tensorID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"indices\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"components\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"symbol\", Bold, Rule[StripOnInput, False]], \"] creates a new \
tensor object.\\n\", StyleBox[\"tensorID\", Bold, Rule[StripOnInput, False]], \
\" is a string that will be used to identify the new object, and must be \
unique.\\n\", StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \" is \
the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\n\", StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \
\" is the unique ID of a tensor object representing a coordinate system, \
created using TNewCoordinates[]. This coordinate system will be used to \
specify the components of the new tensor. If omitted, the default coordinate \
system of the metric \", StyleBox[\"metricID\", Bold, Rule[StripOnInput, \
False]], \" will be used.\\n\", StyleBox[\"indices\", Bold, \
Rule[StripOnInput, False]], \" must be a list of the form {\\[PlusMinus]1, \
\\[PlusMinus]1, ...}, where +1 corresponds to an upper index and -1 \
corresponds to a lower index.\\n\", StyleBox[\"components\", Bold, \
Rule[StripOnInput, False]], \" is a list specifying the representation of the \
tensor with the index configuration \", StyleBox[\"indices\", Bold, \
Rule[StripOnInput, False]], \" and in the coordinate system \", \
StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \".\\n\", \
StyleBox[\"symbol\", Bold, Rule[StripOnInput, False]], \" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\[DottedSquare] will be used.\"}]], TextCell[Row[List[\"TNewTensor[\", \
Style[\"tensorID\", Bold], \", \", Style[\"metricID\", Bold], \", \", \
Style[\"coordinatesID\", Bold], \", \", Style[\"indices\", Bold], \", \", \
Style[\"components\", Bold], \", \", Style[\"symbol\", Bold], \"] creates a \
new tensor object.\\n\", Style[\"tensorID\", Bold], \" is a string that will \
be used to identify the new object, and must be unique.\\n\", \
Style[\"metricID\", Bold], \" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\n\", Style[\"coordinatesID\", \
Bold], \" is the unique ID of a tensor object representing a coordinate \
system, created using TNewCoordinates[]. This coordinate system will be used \
to specify the components of the new tensor. If omitted, the default \
coordinate system of the metric \", Style[\"metricID\", Bold], \" will be \
used.\\n\", Style[\"indices\", Bold], \" must be a list of the form \
{\\[PlusMinus]1, \\[PlusMinus]1, ...}, where +1 corresponds to an upper index \
and -1 corresponds to a lower index.\\n\", Style[\"components\", Bold], \" is \
a list specifying the representation of the tensor with the index \
configuration \", Style[\"indices\", Bold], \" and in the coordinate system \
\", Style[\"coordinatesID\", Bold], \".\\n\", Style[\"symbol\", Bold], \" \
will be used to represent the tensor in formulas. If not given, the \
placeholder \\[DottedSquare] will be used.\"]]]]\)", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, OGRe`TNewTensor, {OGRe`TNewTensor[
         Pattern[OGRe`Private`tensorID, 
          Blank[String]], 
         Pattern[OGRe`Private`metricID, 
          Blank[String]], 
         Optional[
          Pattern[OGRe`Private`coordinatesID, 
           Blank[String]], "_UseDefault_"], 
         Pattern[OGRe`Private`indices, 
          Blank[List]], 
         Pattern[OGRe`Private`components, 
          Blank[List]], 
         Optional[
          Pattern[OGRe`Private`symbol, 
           Blank[String]], "\[DottedSquare]"]] :> 
       Module[{OGRe`Private`useCoords}, 
         OGRe`Private`CheckIfOverwriting[OGRe`Private`tensorID]; 
         OGRe`Private`CheckIfTensorExists[OGRe`Private`metricID]; 
         OGRe`Private`CheckIfMetric[OGRe`Private`metricID]; 
         OGRe`Private`CheckIndicesForm[OGRe`Private`indices]; 
         If[OGRe`Private`coordinatesID === "_UseDefault_", 
           OGRe`Private`useCoords = 
           OGRe`Private`TensorData[OGRe`Private`metricID]["DefaultCoords"], 
           OGRe`Private`CheckIfTensorExists[OGRe`Private`coordinatesID]; 
           OGRe`Private`CheckIfCoordinates[OGRe`Private`coordinatesID]; 
           OGRe`Private`useCoords = OGRe`Private`coordinatesID]; 
         If[Length[OGRe`Private`components] 
            ArrayDepth[OGRe`Private`components] != 1, 
           If[Length[OGRe`Private`components] != Length[
               OGRe`Private`TensorData[OGRe`Private`useCoords][
               "Components"][{{1}, OGRe`Private`useCoords}]], Message[
               MessageName[OGRe`TNewTensor, "ErrorDimension"]]; Abort[]; 
             Null]; If[
            Length[OGRe`Private`indices] != 
             ArrayDepth[OGRe`Private`components], Message[
               MessageName[OGRe`TNewTensor, "ErrorRank"]]; Abort[]; Null], 
           If[Length[OGRe`Private`indices] != 0, Message[
               MessageName[OGRe`TNewTensor, "ErrorRank"]]; Abort[]; Null]; 
           Null]; OGRe`Private`SetTensorID[
          OGRe`Private`tensorID, <|
           "Components" -> <|{OGRe`Private`indices, OGRe`Private`useCoords} -> 
              OGRe`Private`TensorSimplify[OGRe`Private`components]|>, 
            "DefaultCoords" -> OGRe`Private`useCoords, "DefaultIndices" -> 
            OGRe`Private`indices, "Metric" -> OGRe`Private`metricID, "Role" -> 
            "Tensor", "Symbol" -> OGRe`Private`symbol|>]; 
         Return[OGRe`Private`tensorID]; Null]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "OGRe`TNewTensor"|>, False]]], "Output",
 CellChangeTimes->{3.8862073052930274`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"74f82729-a5fe-4fc4-9469-897f6cb5471d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TShow", "@", 
  RowBox[{"TNewTensor", "[", 
   RowBox[{"\"\<EX1aS\>\"", ",", "\"\<EX1a\>\"", ",", "\"\<2sphere\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"+", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", "\"\<S\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886207306907159*^9, 3.886207390504139*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"416a665b-bf91-4aae-9906-156b7e6a3742"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"EX1aS\"", "\":   \"", 
    TemplateBox[{"\"S\"", 
      TemplateBox[{
        StyleBox["\"\[Mu]\"", ShowContents -> False, StripOnInput -> False]}, 
       "RowDefault"], 
      TemplateBox[{"\"\[Mu]\""}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
     SubsuperscriptBox], "\"(\"", 
    TemplateBox[{",", "\",\"", "\[Theta]", "\[Phi]"}, "RowWithSeparators"], 
    "\")\"", "\" = \"", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
       TagBox[
        GridBox[{{
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}, {
           RowBox[{
             RowBox[{"-", 
               RowBox[{"Cot", "[", "\[Theta]", "]"}]}], " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}}, RowSpacings -> 1, 
         ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
       "\[NoBreak]", ")"}], 
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]},
   "RowDefault"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8862073910685997`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"abac3e8f-138c-4ae0-a48e-6b5eed314ccb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TShow", "@", 
  RowBox[{"TChangeDefaultIndices", "[", 
   RowBox[{"\"\<EX1aS\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8862073949021845`*^9, 3.8862074075390234`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4c695d39-f23e-4875-8589-838a6649149c"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"EX1aS\"", "\":   \"", 
    TemplateBox[{"\"S\"", 
      TemplateBox[{"\"\[Mu]\""}, "RowDefault"], 
      TemplateBox[{
        StyleBox["\"\[Mu]\"", ShowContents -> False, StripOnInput -> False]}, 
       "RowDefault"]}, "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
    "\"(\"", 
    TemplateBox[{",", "\",\"", "\[Theta]", "\[Phi]"}, "RowWithSeparators"], 
    "\")\"", "\" = \"", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
       TagBox[
        GridBox[{{
           RowBox[{"Cos", "[", "\[Phi]", "]"}]}, {
           RowBox[{
             RowBox[{"-", 
               RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}}, RowSpacings -> 1, 
         ColumnAlignments -> Center, ColumnAlignments -> Left], Column], 
       "\[NoBreak]", ")"}], 
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]},
   "RowDefault"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886207408204236*^9},
 CellLabel->"OGRe:",ExpressionUUID->"018219be-7f3a-47af-a235-0c41ff5cc4ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "@", 
  RowBox[{"TCalc", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"TCovariantD", "[", "\"\<\[Mu]\>\"", "]"}], ".", 
     RowBox[{"\"\<EX1aS\>\"", "[", "\"\<\[Nu]\>\"", "]"}]}], "+", 
    RowBox[{
     RowBox[{"TCovariantD", "[", "\"\<\[Nu]\>\"", "]"}], ".", 
     RowBox[{"\"\<EX1aS\>\"", "[", "\"\<\[Mu]\>\"", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.886207416665907*^9, 3.886207436765049*^9}, {
  3.8862074926189437`*^9, 3.8862075052521315`*^9}, {3.8862075530736127`*^9, 
  3.886207578027859*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"dfb550ce-0008-4cfe-9371-1840dea06535"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"Result\"", "\":\""},
       "RowDefault"]},
     {"\<\"No non-zero elements.\"\>"}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886207579047997*^9},
 CellLabel->"OGRe:",ExpressionUUID->"cfb95bb6-3948-4ef1-b662-175eae305ea2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
    RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.886207713842204*^9, 3.8862077442274427`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"31b2a541-4835-4ab7-9582-810b89158f79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
     RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.886207746372426*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"6d851c9a-a9d2-4891-b2a7-28c83eaa9fd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "@", 
  RowBox[{"TCalc", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"TPartialD", "[", "\"\<\[Nu]\>\"", "]"}], " ", ".", " ", 
     RowBox[{"\"\<EX1aS\>\"", "[", "\"\<\[Mu]\>\"", "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"TPartialD", "[", "\"\<\[Mu]\>\"", "]"}], " ", ".", " ", 
     RowBox[{"\"\<EX1aS\>\"", "[", "\"\<\[Nu]\>\"", "]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{
     "\"\<EX1aChristoffel\>\"", "[", "\"\<\[Alpha]\[Nu]\[Mu]\>\"", "]"}], " ",
      ".", " ", 
     RowBox[{"\"\<EX1aS\>\"", "[", "\"\<\[Mu]\>\"", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8862078070728893`*^9, 3.886207812737446*^9}, {
  3.8862078447517595`*^9, 3.8862080302368636`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"7fe00efc-b4c0-47be-a1ae-7fff5f05bc6b"],

Cell[BoxData[
 TemplateBox[{
  "OGRe`Private`AddTensors", "ErrorIndicesSame", 
   "\"The tensors \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"_TCalcTemp4_\\\\\\\"\\\"}]\
\\)\\\"[\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\[Mu]\[Nu]\\\\\\\"\\\"}]\\)\\\"] and \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"_TCalcTemp5_\\\\\\\"\\\"}]\\)\\\"[\\\"\\!\\(\
\\*RowBox[{\\\"\\\\\\\"\[Alpha]\[Nu]\\\\\\\"\\\"}]\\)\\\"] cannot be added, \
as their index specifications must be the same up to permutation.\"", 2, 42, 
   10, 27901478780457548504, "Local", "OGRe`Private`AddTensors"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.886207975105962*^9, 3.8862080313414145`*^9},
 CellLabel->
  "During evaluation of \
In[42]:=",ExpressionUUID->"51773e58-c19b-4c68-b1d1-6e06374168f2"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.886207975118581*^9, 3.8862080313601437`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"6b8da0c1-f1fe-431b-bd25-6b8f99edb316"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TCalcChristoffel"}]], "Input",
 CellChangeTimes->{{3.886207922485838*^9, 3.8862079249998455`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"afdde443-d5fd-4741-b24e-fc39712c83bf"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TCalcChristoffel[\\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, \
False]], \\\"] calculates the Christoffel symbols (the coefficients of the \
Levi-Civita connection) from the metric \\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", StyleBox[\\\"metricID\\\", Bold, \
Rule[StripOnInput, False]], \\\"Christoffel\\\\\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\\\"}]], TextCell[Row[List[\\\"TCalcChristoffel[\\\", \
Style[\\\"metricID\\\", Bold], \\\"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \\\", \
Style[\\\"metricID\\\", Bold], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", Style[\\\"metricID\\\", Bold], \\\"Christoffel\\\
\\\\\". Note that the Christoffel symbols are not the components of a tensor, \
but this tensor object will know to transform according to the correct rules \
under change of coordinates.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "TCalcChristoffel", "[", "OGRe`Private`metricID_String", 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"OGRe`Private`christoffelID", ",", 
                    RowBox[{"OGRe`Private`inverseMetricID", "=", 
                    RowBox[{"OGRe`Private`NewTempID", "[", "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Role\"", "]"}], 
                    "=!=", "\"Metric\""}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TCalcChristoffel", "::", "ErrorNotMetric"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"OGRe`Private`SetTensorID", "[", 
                    RowBox[{"OGRe`Private`inverseMetricID", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Components\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"DefaultCoords\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"DefaultCoords\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"DefaultIndices\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Metric\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Metric\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"Role\"", "\[Rule]", "\"Temporary\""}], ",", 
                    RowBox[{"\"Symbol\"", "\[Rule]", 
                    TemplateBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Symbol\"", "]"}], 
                    "\"\[Lambda]\[Sigma]\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"OGRe`Private`christoffelID", "=", 
                    RowBox[{"TCalc", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    
                    RowBox[{"OGRe`Private`metricID", "<>", 
                    "\"Christoffel\""}], ")"}], "[", 
                    "\"\[Lambda]\[Mu]\[Nu]\"", "]"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`inverseMetricID", "[", 
                    "\"\[Lambda]\[Sigma]\"", "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Mu]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Nu]\[Sigma]\"",
                     "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Nu]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Sigma]\[Mu]\"",
                     "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Sigma]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Mu]\[Nu]\"", 
                    "]"}]}]}], ")"}]}]}], ",", "\"\[CapitalGamma]\""}], 
                    "]"}]}], ";", 
                    RowBox[{"OGRe`Private`ChangeTensorKey", "[", 
                    
                    RowBox[{"OGRe`Private`christoffelID", ",", "\"Role\"", 
                    ",", "\"Christoffel\""}], "]"}], ";", 
                    
                    RowBox[{"Return", "[", "OGRe`Private`christoffelID", 
                    "]"}], ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"OGRe`TCalcChristoffel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TCalcChristoffel[\\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, \
False]], \\\"] calculates the Christoffel symbols (the coefficients of the \
Levi-Civita connection) from the metric \\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", StyleBox[\\\"metricID\\\", Bold, \
Rule[StripOnInput, False]], \\\"Christoffel\\\\\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\\\"}]], TextCell[Row[List[\\\"TCalcChristoffel[\\\", \
Style[\\\"metricID\\\", Bold], \\\"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \\\", \
Style[\\\"metricID\\\", Bold], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", Style[\\\"metricID\\\", Bold], \\\"Christoffel\\\
\\\\\". Note that the Christoffel symbols are not the components of a tensor, \
but this tensor object will know to transform according to the correct rules \
under change of coordinates.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*InterpretationBox[Cell[TextData[{\"TCalcChristoffel[\", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \"] calculates the \
Christoffel symbols (the coefficients of the Levi-Civita connection) from the \
metric \", StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \" and \
stores the result in a new tensor object with ID \\\"\", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \"Christoffel\\\". \
Note that the Christoffel symbols are not the components of a tensor, but \
this tensor object will know to transform according to the correct rules \
under change of coordinates.\"}]], TextCell[Row[List[\"TCalcChristoffel[\", \
Style[\"metricID\", Bold], \"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \", \
Style[\"metricID\", Bold], \" and stores the result in a new tensor object \
with ID \\\"\", Style[\"metricID\", Bold], \"Christoffel\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\"]]]]\)", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, OGRe`TCalcChristoffel, {OGRe`TCalcChristoffel[
         Pattern[OGRe`Private`metricID, 
          Blank[String]]] :> 
       Module[{OGRe`Private`christoffelID, OGRe`Private`inverseMetricID = 
          OGRe`Private`NewTempID[]}, 
         OGRe`Private`CheckIfTensorExists[OGRe`Private`metricID]; 
         If[OGRe`Private`TensorData[OGRe`Private`metricID]["Role"] =!= 
           "Metric", Message[
             MessageName[OGRe`TCalcChristoffel, "ErrorNotMetric"]]; Abort[]; 
           Null]; 
         OGRe`Private`SetTensorID[
          OGRe`Private`inverseMetricID, <|
           "Components" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["Components"], 
            "DefaultCoords" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["DefaultCoords"], 
            "DefaultIndices" -> {1, 1}, "Metric" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["Metric"], "Role" -> 
            "Temporary", "Symbol" -> Superscript[
              OGRe`Private`TensorData[OGRe`Private`metricID]["Symbol"], 
              "\[Lambda]\[Sigma]"]|>]; OGRe`Private`christoffelID = OGRe`TCalc[
            (OGRe`Private`metricID <> "Christoffel")[
            "\[Lambda]\[Mu]\[Nu]"], (1/2) Dot[
              OGRe`Private`inverseMetricID["\[Lambda]\[Sigma]"], Dot[
                OGRe`TPartialD["\[Mu]"], 
                OGRe`Private`metricID["\[Nu]\[Sigma]"]] + Dot[
                OGRe`TPartialD["\[Nu]"], 
                OGRe`Private`metricID["\[Sigma]\[Mu]"]] - Dot[
               OGRe`TPartialD["\[Sigma]"], 
               OGRe`Private`metricID["\[Mu]\[Nu]"]]], "\[CapitalGamma]"]; 
         OGRe`Private`ChangeTensorKey[
          OGRe`Private`christoffelID, "Role", "Christoffel"]; 
         Return[OGRe`Private`christoffelID]; Null]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "OGRe`TCalcChristoffel"|>, False]]], "Output",
 CellChangeTimes->{3.886207925790326*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"3c225b7b-2e52-4e06-be25-404f290feaae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.886205929215537*^9, 
  3.8862059296772127`*^9}},ExpressionUUID->"556ab835-1de9-457d-8892-\
bd5658760596"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewMetric", "[", 
  RowBox[{"\"\<TrialMetric\>\"", ",", "\"\<Spherical\>\"", ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      SuperscriptBox[
       RowBox[{"a", "[", "t", "]"}], "2"], ",", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], " ", 
         RowBox[{"q", "[", "r", "]"}]}], ")"}], "2"], ",", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"q", "[", "r", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8860377202457447`*^9, 3.8860377575610747`*^9}, {
  3.886037852536408*^9, 3.8860379421061106`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c12afbe7-9029-4f8c-81ea-42609a4917d8"],

Cell[BoxData["\<\"TrialMetric\"\>"], "Output",
 CellChangeTimes->{3.8860379650487757`*^9, 3.886042209821741*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"560a8f47-ffc0-4e89-83ed-1203c0e0c68a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "@", 
  RowBox[{"TCalcRicciTensor", "[", "\"\<TrialMetric\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.886037986938642*^9, 3.886038021728699*^9}, {
  3.886038101015267*^9, 3.886038114771159*^9}, {3.886039192725822*^9, 
  3.886039200258134*^9}, {3.886039606425362*^9, 3.8860396097959805`*^9}, {
  3.886042216947628*^9, 3.8860422216920347`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"beae34ea-f7f4-4cfb-8218-9beb6ed77eb5"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"TrialMetricRicciTensor\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{"\"t\"", "\"t\""}, "RowDefault"], 
              TemplateBox[{
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"3", " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"a", "[", "t", "]"}], 
               SuperscriptBox["t", "2"]},
              "InactiveD"]}], 
            RowBox[{"a", "[", "t", "]"}]]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{"\"r\"", "\"r\""}, "RowDefault"], 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox[
             TemplateBox[{"Inactive", 
               RowBox[{"a", "[", "t", "]"}], "t"},
              "InactiveD"], "2"]}], "+", 
           RowBox[{
            RowBox[{"a", "[", "t", "]"}], " ", 
            TemplateBox[{"Inactive", 
              RowBox[{"a", "[", "t", "]"}], 
              SuperscriptBox["t", "2"]},
             "InactiveD"]}], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"q", "[", "r", "]"}], 
               SuperscriptBox["r", "2"]},
              "InactiveD"]}], 
            RowBox[{"q", "[", "r", "]"}]]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{"\"\[Theta]\"", "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"q", "[", "r", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox[
                TemplateBox[{"Inactive", 
                  RowBox[{"a", "[", "t", "]"}], "t"},
                 "InactiveD"], "2"]}], "+", 
              RowBox[{
               RowBox[{"a", "[", "t", "]"}], " ", 
               TemplateBox[{"Inactive", 
                 RowBox[{"a", "[", "t", "]"}], 
                 SuperscriptBox["t", "2"]},
                "InactiveD"]}]}], ")"}]}], "-", 
           SuperscriptBox[
            TemplateBox[{"Inactive", 
              RowBox[{"q", "[", "r", "]"}], "r"},
             "InactiveD"], "2"], "-", 
           RowBox[{
            RowBox[{"q", "[", "r", "]"}], " ", 
            TemplateBox[{"Inactive", 
              RowBox[{"q", "[", "r", "]"}], 
              SuperscriptBox["r", "2"]},
             "InactiveD"]}]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{"\"\[Phi]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"q", "[", "r", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox[
                  TemplateBox[{"Inactive", 
                    RowBox[{"a", "[", "t", "]"}], "t"},
                   "InactiveD"], "2"]}], "+", 
                RowBox[{
                 RowBox[{"a", "[", "t", "]"}], " ", 
                 TemplateBox[{"Inactive", 
                   RowBox[{"a", "[", "t", "]"}], 
                   SuperscriptBox["t", "2"]},
                  "InactiveD"]}]}], ")"}]}], "-", 
             SuperscriptBox[
              TemplateBox[{"Inactive", 
                RowBox[{"q", "[", "r", "]"}], "r"},
               "InactiveD"], "2"], "-", 
             RowBox[{
              RowBox[{"q", "[", "r", "]"}], " ", 
              TemplateBox[{"Inactive", 
                RowBox[{"q", "[", "r", "]"}], 
                SuperscriptBox["r", "2"]},
               "InactiveD"]}]}], ")"}]}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886042222946825*^9},
 CellLabel->"OGRe:",ExpressionUUID->"8f4c29fd-5050-462b-afed-78514b3de5b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "@", 
  RowBox[{"TCalcRicciScalar", "[", "\"\<TrialMetric\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8860397428889503`*^9, 3.8860397549317164`*^9}, {
  3.8860397895611186`*^9, 3.886039806377993*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a01ea833-3714-4a68-8dd0-371a8df92f22"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"TrialMetricRicciScalar\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{}, "RowDefault"], 
              TemplateBox[{}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox[
           RowBox[{"2", "+", 
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{"q", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                TemplateBox[{"Inactive", 
                  RowBox[{"a", "[", "t", "]"}], "t"},
                 "InactiveD"], "2"], "+", 
               RowBox[{
                RowBox[{"a", "[", "t", "]"}], " ", 
                TemplateBox[{"Inactive", 
                  RowBox[{"a", "[", "t", "]"}], 
                  SuperscriptBox["t", "2"]},
                 "InactiveD"]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox[
              TemplateBox[{"Inactive", 
                RowBox[{"q", "[", "r", "]"}], "r"},
               "InactiveD"], "2"]}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"q", "[", "r", "]"}], " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"q", "[", "r", "]"}], 
               SuperscriptBox["r", "2"]},
              "InactiveD"]}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "t", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"q", "[", "r", "]"}], "2"]}]]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8860422402316737`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"581b2a65-3ac2-4fa2-a6ef-72b44c81b96b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "[", 
  RowBox[{"\"\<TrialMetricRicciTensor\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", "\"\<Spherical\>\"", ",", "Activate"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8860409192990866`*^9, 3.88604092152921*^9}, {
  3.8860409699724503`*^9, 3.886040974633215*^9}, {3.8860410213414116`*^9, 
  3.886041065291918*^9}, {3.8860411079190903`*^9, 3.8860411846671934`*^9}, {
  3.8860414758151608`*^9, 3.886041483070203*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6fe833ce-5465-49b9-b835-9c6ec899e346"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"TrialMetricRicciTensor\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                "\"t\""}, "RowDefault"], 
              TemplateBox[{"\"t\"", 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox[
           RowBox[{"3", " ", 
            TemplateBox[{"Inactive", 
              RowBox[{"a", "[", "t", "]"}], 
              SuperscriptBox["t", "2"]},
             "InactiveD"]}], 
           RowBox[{"a", "[", "t", "]"}]]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                "\"r\""}, "RowDefault"], 
              TemplateBox[{"\"r\"", 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox[
              TemplateBox[{"Inactive", 
                RowBox[{"a", "[", "t", "]"}], "t"},
               "InactiveD"], "2"]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "t", "]"}], " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"a", "[", "t", "]"}], 
               SuperscriptBox["t", "2"]},
              "InactiveD"]}], "-", 
            FractionBox[
             RowBox[{"2", " ", 
              TemplateBox[{"Inactive", 
                RowBox[{"q", "[", "r", "]"}], 
                SuperscriptBox["r", "2"]},
               "InactiveD"]}], 
             RowBox[{"q", "[", "r", "]"}]]}], 
           SuperscriptBox[
            RowBox[{"a", "[", "t", "]"}], "2"]]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"R\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False],
                 "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Theta]\"", 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"R\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"q", "[", "r", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 TemplateBox[{"Inactive", 
                   RowBox[{"a", "[", "t", "]"}], "t"},
                  "InactiveD"], "2"]}], "+", 
               RowBox[{
                RowBox[{"a", "[", "t", "]"}], " ", 
                TemplateBox[{"Inactive", 
                  RowBox[{"a", "[", "t", "]"}], 
                  SuperscriptBox["t", "2"]},
                 "InactiveD"]}]}], ")"}]}], "-", 
            SuperscriptBox[
             TemplateBox[{"Inactive", 
               RowBox[{"q", "[", "r", "]"}], "r"},
              "InactiveD"], "2"], "-", 
            RowBox[{
             RowBox[{"q", "[", "r", "]"}], " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"q", "[", "r", "]"}], 
               SuperscriptBox["r", "2"]},
              "InactiveD"]}]}], 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "t", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"q", "[", "r", "]"}], "2"]}]]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8860422724733057`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"18aa720e-8f23-4cab-b874-597e39944672"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TGetComponents", "[", 
  RowBox[{"\"\<TrialMetricRicciTensor\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", "\"\<Spherical\>\"", ",", "Activate"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.886041344183682*^9, 3.886041407383185*^9}, {
  3.886041494789812*^9, 3.886041501899663*^9}, {3.8860418858443704`*^9, 
  3.886041887537369*^9}, {3.8860422997329454`*^9, 3.886042300611422*^9}, {
  3.8860423656432953`*^9, 3.8860423662231884`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"6ab2d518-2638-4881-b672-70d11f9cfeb2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{
        SuperscriptBox["a", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"a", "[", "t", "]"}]], ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["a", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["a", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{
          SuperscriptBox["q", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}], 
        RowBox[{"q", "[", "r", "]"}]]}], 
      SuperscriptBox[
       RowBox[{"a", "[", "t", "]"}], "2"]], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     FractionBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "r", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["a", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["a", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"q", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["q", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"q", "[", "r", "]"}], "2"]}]], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     FractionBox[
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["q", "\[Prime]",
          MultilineFunction->None], "[", "r", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"q", "[", "r", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["a", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["a", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        RowBox[{"q", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["q", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "r", "]"}]}]}], 
      RowBox[{
       SuperscriptBox[
        RowBox[{"a", "[", "t", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"q", "[", "r", "]"}], "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.886041346847451*^9, 3.886041407797516*^9, {3.886041497659377*^9, 
   3.886041503560283*^9}, 3.8860418881038647`*^9, {3.886042279878769*^9, 
   3.8860423010822277`*^9}, 3.886042366815769*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"7854a8b1-aaa5-441a-aaf5-c28fd32e6342"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TNewTensor"}]], "Input",
 CellChangeTimes->{{3.8860427051933403`*^9, 3.88604270962508*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"cb235f4e-be09-4edc-8c99-35a103b83004"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TNewTensor[\\\", StyleBox[\\\"tensorID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\", \
\\\", StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\", \\\
\", StyleBox[\\\"symbol\\\", Bold, Rule[StripOnInput, False]], \\\"] creates \
a new tensor object.\\\\n\\\", StyleBox[\\\"tensorID\\\", Bold, \
Rule[StripOnInput, False]], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\\\n\\\", \
StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \\\" is the \
unique ID of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\" will be used.\\\\n\\\", StyleBox[\\\"indices\\\", Bold, \
Rule[StripOnInput, False]], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\" is a list \
specifying the representation of the tensor with the index configuration \
\\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\" and in \
the coordinate system \\\", StyleBox[\\\"coordinatesID\\\", Bold, \
Rule[StripOnInput, False]], \\\".\\\\n\\\", StyleBox[\\\"symbol\\\", Bold, \
Rule[StripOnInput, False]], \\\" will be used to represent the tensor in \
formulas. If not given, the placeholder \\\\[DottedSquare] will be \
used.\\\"}]], TextCell[Row[List[\\\"TNewTensor[\\\", Style[\\\"tensorID\\\", \
Bold], \\\", \\\", Style[\\\"metricID\\\", Bold], \\\", \\\", \
Style[\\\"coordinatesID\\\", Bold], \\\", \\\", Style[\\\"indices\\\", Bold], \
\\\", \\\", Style[\\\"components\\\", Bold], \\\", \\\", \
Style[\\\"symbol\\\", Bold], \\\"] creates a new tensor object.\\\\n\\\", \
Style[\\\"tensorID\\\", Bold], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", Style[\\\"metricID\\\", Bold], \
\\\" is the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\\\n\\\", Style[\\\"coordinatesID\\\", Bold], \\\" is the unique ID \
of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", Style[\\\"metricID\\\", Bold], \\\" will be used.\\\\n\\\", \
Style[\\\"indices\\\", Bold], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
Style[\\\"components\\\", Bold], \\\" is a list specifying the representation \
of the tensor with the index configuration \\\", Style[\\\"indices\\\", \
Bold], \\\" and in the coordinate system \\\", Style[\\\"coordinatesID\\\", \
Bold], \\\".\\\\n\\\", Style[\\\"symbol\\\", Bold], \\\" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\\\[DottedSquare] will be used.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"TNewTensor", "[", 
                    
                    RowBox[{
                    "OGRe`Private`tensorID_String", ",", 
                    "OGRe`Private`metricID_String", ",", 
                    
                    RowBox[{
                    "OGRe`Private`coordinatesID_String", ":", 
                    "\"_UseDefault_\""}], ",", "OGRe`Private`indices_List", 
                    ",", "OGRe`Private`components_List", ",", 
                    
                    RowBox[{
                    "OGRe`Private`symbol_String", ":", 
                    "\"\[DottedSquare]\""}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "OGRe`Private`useCoords", "}"}], ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfOverwriting", "[", 
                    "OGRe`Private`tensorID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfMetric", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIndicesForm", "[", 
                    "OGRe`Private`indices", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`coordinatesID", "===", 
                    "\"_UseDefault_\""}], ",", 
                    RowBox[{"OGRe`Private`useCoords", "=", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"DefaultCoords\"", 
                    "]"}]}], ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`coordinatesID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`CheckIfCoordinates", "[", 
                    "OGRe`Private`coordinatesID", "]"}], ";", 
                    
                    RowBox[{"OGRe`Private`useCoords", "=", 
                    "OGRe`Private`coordinatesID"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`components", "]"}], 
                    " ", 
                    
                    RowBox[{"ArrayDepth", "[", "OGRe`Private`components", 
                    "]"}]}], "\[NotEqual]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`components", "]"}], 
                    "\[NotEqual]", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`useCoords", "]"}], "[", "\"Components\"", 
                    "]"}], "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", "OGRe`Private`useCoords"}], 
                    "}"}], "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorDimension"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`indices", "]"}], 
                    "\[NotEqual]", 
                    
                    RowBox[{"ArrayDepth", "[", "OGRe`Private`components", 
                    "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorRank"}], "MessageName"],
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "OGRe`Private`indices", "]"}], 
                    "\[NotEqual]", "0"}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TNewTensor", "::", "ErrorRank"}], "MessageName"],
                     "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";"}]}], 
                    "]"}], ";", 
                    RowBox[{"OGRe`Private`SetTensorID", "[", 
                    RowBox[{"OGRe`Private`tensorID", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"OGRe`Private`indices", ",", 
                    "OGRe`Private`useCoords"}], "}"}], "\[Rule]", 
                    
                    RowBox[{"OGRe`Private`TensorSimplify", "[", 
                    "OGRe`Private`components", "]"}]}], "]"}]}], ",", 
                    
                    RowBox[{"\"DefaultCoords\"", "\[Rule]", 
                    "OGRe`Private`useCoords"}], ",", 
                    
                    RowBox[{"\"DefaultIndices\"", "\[Rule]", 
                    "OGRe`Private`indices"}], ",", 
                    
                    RowBox[{"\"Metric\"", "\[Rule]", 
                    "OGRe`Private`metricID"}], ",", 
                    RowBox[{"\"Role\"", "\[Rule]", "\"Tensor\""}], ",", 
                    
                    RowBox[{"\"Symbol\"", "\[Rule]", 
                    "OGRe`Private`symbol"}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"Return", "[", "OGRe`Private`tensorID", "]"}], 
                    ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"OGRe`TNewTensor\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TNewTensor[\\\", StyleBox[\\\"tensorID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \
\\\", \\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\", \
\\\", StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\", \\\
\", StyleBox[\\\"symbol\\\", Bold, Rule[StripOnInput, False]], \\\"] creates \
a new tensor object.\\\\n\\\", StyleBox[\\\"tensorID\\\", Bold, \
Rule[StripOnInput, False]], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\\\n\\\", \
StyleBox[\\\"coordinatesID\\\", Bold, Rule[StripOnInput, False]], \\\" is the \
unique ID of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, False]], \
\\\" will be used.\\\\n\\\", StyleBox[\\\"indices\\\", Bold, \
Rule[StripOnInput, False]], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
StyleBox[\\\"components\\\", Bold, Rule[StripOnInput, False]], \\\" is a list \
specifying the representation of the tensor with the index configuration \
\\\", StyleBox[\\\"indices\\\", Bold, Rule[StripOnInput, False]], \\\" and in \
the coordinate system \\\", StyleBox[\\\"coordinatesID\\\", Bold, \
Rule[StripOnInput, False]], \\\".\\\\n\\\", StyleBox[\\\"symbol\\\", Bold, \
Rule[StripOnInput, False]], \\\" will be used to represent the tensor in \
formulas. If not given, the placeholder \\\\[DottedSquare] will be \
used.\\\"}]], TextCell[Row[List[\\\"TNewTensor[\\\", Style[\\\"tensorID\\\", \
Bold], \\\", \\\", Style[\\\"metricID\\\", Bold], \\\", \\\", \
Style[\\\"coordinatesID\\\", Bold], \\\", \\\", Style[\\\"indices\\\", Bold], \
\\\", \\\", Style[\\\"components\\\", Bold], \\\", \\\", \
Style[\\\"symbol\\\", Bold], \\\"] creates a new tensor object.\\\\n\\\", \
Style[\\\"tensorID\\\", Bold], \\\" is a string that will be used to identify \
the new object, and must be unique.\\\\n\\\", Style[\\\"metricID\\\", Bold], \
\\\" is the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\\\n\\\", Style[\\\"coordinatesID\\\", Bold], \\\" is the unique ID \
of a tensor object representing a coordinate system, created using \
TNewCoordinates[]. This coordinate system will be used to specify the \
components of the new tensor. If omitted, the default coordinate system of \
the metric \\\", Style[\\\"metricID\\\", Bold], \\\" will be used.\\\\n\\\", \
Style[\\\"indices\\\", Bold], \\\" must be a list of the form \
{\\\\[PlusMinus]1, \\\\[PlusMinus]1, ...}, where +1 corresponds to an upper \
index and -1 corresponds to a lower index.\\\\n\\\", \
Style[\\\"components\\\", Bold], \\\" is a list specifying the representation \
of the tensor with the index configuration \\\", Style[\\\"indices\\\", \
Bold], \\\" and in the coordinate system \\\", Style[\\\"coordinatesID\\\", \
Bold], \\\".\\\\n\\\", Style[\\\"symbol\\\", Bold], \\\" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\\\[DottedSquare] will be used.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*InterpretationBox[Cell[TextData[{\"TNewTensor[\", \
StyleBox[\"tensorID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"indices\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"components\", Bold, Rule[StripOnInput, False]], \", \", \
StyleBox[\"symbol\", Bold, Rule[StripOnInput, False]], \"] creates a new \
tensor object.\\n\", StyleBox[\"tensorID\", Bold, Rule[StripOnInput, False]], \
\" is a string that will be used to identify the new object, and must be \
unique.\\n\", StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \" is \
the unique ID of a tensor object representing a metric, created using \
TNewMetric[]. The metric will be used to raise and lower indices for the new \
tensor.\\n\", StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \
\" is the unique ID of a tensor object representing a coordinate system, \
created using TNewCoordinates[]. This coordinate system will be used to \
specify the components of the new tensor. If omitted, the default coordinate \
system of the metric \", StyleBox[\"metricID\", Bold, Rule[StripOnInput, \
False]], \" will be used.\\n\", StyleBox[\"indices\", Bold, \
Rule[StripOnInput, False]], \" must be a list of the form {\\[PlusMinus]1, \
\\[PlusMinus]1, ...}, where +1 corresponds to an upper index and -1 \
corresponds to a lower index.\\n\", StyleBox[\"components\", Bold, \
Rule[StripOnInput, False]], \" is a list specifying the representation of the \
tensor with the index configuration \", StyleBox[\"indices\", Bold, \
Rule[StripOnInput, False]], \" and in the coordinate system \", \
StyleBox[\"coordinatesID\", Bold, Rule[StripOnInput, False]], \".\\n\", \
StyleBox[\"symbol\", Bold, Rule[StripOnInput, False]], \" will be used to \
represent the tensor in formulas. If not given, the placeholder \
\\[DottedSquare] will be used.\"}]], TextCell[Row[List[\"TNewTensor[\", \
Style[\"tensorID\", Bold], \", \", Style[\"metricID\", Bold], \", \", \
Style[\"coordinatesID\", Bold], \", \", Style[\"indices\", Bold], \", \", \
Style[\"components\", Bold], \", \", Style[\"symbol\", Bold], \"] creates a \
new tensor object.\\n\", Style[\"tensorID\", Bold], \" is a string that will \
be used to identify the new object, and must be unique.\\n\", \
Style[\"metricID\", Bold], \" is the unique ID of a tensor object \
representing a metric, created using TNewMetric[]. The metric will be used to \
raise and lower indices for the new tensor.\\n\", Style[\"coordinatesID\", \
Bold], \" is the unique ID of a tensor object representing a coordinate \
system, created using TNewCoordinates[]. This coordinate system will be used \
to specify the components of the new tensor. If omitted, the default \
coordinate system of the metric \", Style[\"metricID\", Bold], \" will be \
used.\\n\", Style[\"indices\", Bold], \" must be a list of the form \
{\\[PlusMinus]1, \\[PlusMinus]1, ...}, where +1 corresponds to an upper index \
and -1 corresponds to a lower index.\\n\", Style[\"components\", Bold], \" is \
a list specifying the representation of the tensor with the index \
configuration \", Style[\"indices\", Bold], \" and in the coordinate system \
\", Style[\"coordinatesID\", Bold], \".\\n\", Style[\"symbol\", Bold], \" \
will be used to represent the tensor in formulas. If not given, the \
placeholder \\[DottedSquare] will be used.\"]]]]\)", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, OGRe`TNewTensor, {OGRe`TNewTensor[
         Pattern[OGRe`Private`tensorID, 
          Blank[String]], 
         Pattern[OGRe`Private`metricID, 
          Blank[String]], 
         Optional[
          Pattern[OGRe`Private`coordinatesID, 
           Blank[String]], "_UseDefault_"], 
         Pattern[OGRe`Private`indices, 
          Blank[List]], 
         Pattern[OGRe`Private`components, 
          Blank[List]], 
         Optional[
          Pattern[OGRe`Private`symbol, 
           Blank[String]], "\[DottedSquare]"]] :> 
       Module[{OGRe`Private`useCoords}, 
         OGRe`Private`CheckIfOverwriting[OGRe`Private`tensorID]; 
         OGRe`Private`CheckIfTensorExists[OGRe`Private`metricID]; 
         OGRe`Private`CheckIfMetric[OGRe`Private`metricID]; 
         OGRe`Private`CheckIndicesForm[OGRe`Private`indices]; 
         If[OGRe`Private`coordinatesID === "_UseDefault_", 
           OGRe`Private`useCoords = 
           OGRe`Private`TensorData[OGRe`Private`metricID]["DefaultCoords"], 
           OGRe`Private`CheckIfTensorExists[OGRe`Private`coordinatesID]; 
           OGRe`Private`CheckIfCoordinates[OGRe`Private`coordinatesID]; 
           OGRe`Private`useCoords = OGRe`Private`coordinatesID]; 
         If[Length[OGRe`Private`components] 
            ArrayDepth[OGRe`Private`components] != 1, 
           If[Length[OGRe`Private`components] != Length[
               OGRe`Private`TensorData[OGRe`Private`useCoords][
               "Components"][{{1}, OGRe`Private`useCoords}]], Message[
               MessageName[OGRe`TNewTensor, "ErrorDimension"]]; Abort[]; 
             Null]; If[
            Length[OGRe`Private`indices] != 
             ArrayDepth[OGRe`Private`components], Message[
               MessageName[OGRe`TNewTensor, "ErrorRank"]]; Abort[]; Null], 
           If[Length[OGRe`Private`indices] != 0, Message[
               MessageName[OGRe`TNewTensor, "ErrorRank"]]; Abort[]; Null]; 
           Null]; OGRe`Private`SetTensorID[
          OGRe`Private`tensorID, <|
           "Components" -> <|{OGRe`Private`indices, OGRe`Private`useCoords} -> 
              OGRe`Private`TensorSimplify[OGRe`Private`components]|>, 
            "DefaultCoords" -> OGRe`Private`useCoords, "DefaultIndices" -> 
            OGRe`Private`indices, "Metric" -> OGRe`Private`metricID, "Role" -> 
            "Tensor", "Symbol" -> OGRe`Private`symbol|>]; 
         Return[OGRe`Private`tensorID]; Null]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "OGRe`TNewTensor"|>, False]]], "Output",
 CellChangeTimes->{3.8860427099281054`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"dd93d566-dfe3-4e61-827e-11f4c2f70e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewTensor", "[", 
  RowBox[{
  "\"\<UniversalStressET\>\"", ",", "\"\<TrialMetric\>\"", ",", 
   "\"\<Spherical\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["\[Rho]", "0"]}], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       SubscriptBox["p", "0"], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       SubscriptBox["p", "0"], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       SubscriptBox["p", "0"], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}]}], "}"}], "]"}], ",", 
   "\"\<T\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8860427120194197`*^9, 3.88604284525323*^9}, {
  3.8860428988801327`*^9, 3.8860429402067003`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"0914fd2a-42c5-434a-b698-7a80b4caa533"],

Cell[BoxData["\<\"UniversalStressET\"\>"], "Output",
 CellChangeTimes->{3.8860429411977015`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"77ebf29f-ebc1-4ef5-86e6-3541497b1d26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TNewTensor", "[", 
  RowBox[{
  "\"\<USET\>\"", ",", "\"\<TrialMetric\>\"", ",", "\"\<Spherical\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"\[Rho]", "[", "t", "]"}]}], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}], ",", 
      RowBox[{
       RowBox[{"p", "[", "t", "]"}], "-", 
       FractionBox["\[CapitalLambda]", 
        RowBox[{"8", " ", "\[Pi]", " ", "G"}]]}]}], "}"}], "]"}], ",", 
   "\"\<T\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.886043412694336*^9, 3.8860434415834556`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"448b8ae4-ef0a-4730-8d66-bd3896670868"],

Cell[BoxData["\<\"USET\"\>"], "Output",
 CellChangeTimes->{3.8860434471887875`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"e01d3ded-1189-4e9c-8aca-f43d021369ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TShow", "[", "\"\<USET\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8860429445317802`*^9, 3.8860429533052855`*^9}, 
   3.88604345233596*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"811eb49b-ff23-4247-9dbf-be62f9c7afe9"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{"\"USET\"", "\":   \"", 
    TemplateBox[{"\"T\"", 
      TemplateBox[{
        StyleBox["\"\[Mu]\"", ShowContents -> False, StripOnInput -> False], 
        "\"\[Nu]\""}, "RowDefault"], 
      TemplateBox[{"\"\[Mu]\"", 
        StyleBox["\"\[Nu]\"", ShowContents -> False, StripOnInput -> False]}, 
       "RowDefault"]}, "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
    "\"(\"", 
    TemplateBox[{",", "\",\"", "t", "r", "\[Theta]", "\[Phi]"}, 
     "RowWithSeparators"], "\")\"", "\" = \"", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", 
       GridBox[{{
          RowBox[{
            RowBox[{"-", 
              FractionBox["\[CapitalLambda]", 
               RowBox[{"8", " ", "G", " ", "\[Pi]"}]]}], "-", 
            RowBox[{"\[Rho]", "[", "t", "]"}]}], "0", "0", "0"}, {"0", 
          RowBox[{
            RowBox[{"-", 
              FractionBox["\[CapitalLambda]", 
               RowBox[{"8", " ", "G", " ", "\[Pi]"}]]}], "+", 
            RowBox[{"p", "[", "t", "]"}]}], "0", "0"}, {"0", "0", 
          RowBox[{
            RowBox[{"-", 
              FractionBox["\[CapitalLambda]", 
               RowBox[{"8", " ", "G", " ", "\[Pi]"}]]}], "+", 
            RowBox[{"p", "[", "t", "]"}]}], "0"}, {"0", "0", "0", 
          RowBox[{
            RowBox[{"-", 
              FractionBox["\[CapitalLambda]", 
               RowBox[{"8", " ", "G", " ", "\[Pi]"}]]}], "+", 
            RowBox[{"p", "[", "t", "]"}]}]}}, RowSpacings -> 1, 
        ColumnSpacings -> 1, RowAlignments -> Baseline, ColumnAlignments -> 
        Center], "\[NoBreak]", ")"}], 
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]},
   "RowDefault"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886043453198181*^9},
 CellLabel->"OGRe:",ExpressionUUID->"e9a5a141-b84a-4456-a2ba-066f4faaa607"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "@", 
  RowBox[{"TCalc", "[", 
   RowBox[{"\"\<Conservation\>\"", ",", 
    RowBox[{
     RowBox[{"TCovariantD", "[", "\"\<\[Mu]\>\"", "]"}], ".", 
     RowBox[{"\"\<USET\>\"", "[", "\"\<\[Mu]\[Nu]\>\"", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8860430078677645`*^9, 3.886043013429387*^9}, {
   3.8860431472567472`*^9, 3.8860431696298523`*^9}, {3.8860431997061768`*^9, 
   3.8860432290851855`*^9}, 3.8860432689196644`*^9, {3.8860434639174023`*^9, 
   3.886043473614026*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"46fb66b6-95b8-42dc-b09d-2c6e1c20ce71"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"Conservation\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[DottedSquare]\"", 
              TemplateBox[{
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"], 
              TemplateBox[{"\"t\""}, "RowDefault"]}, "Subsuperscript", 
             SyntaxForm -> SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           FractionBox[
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", "[", "t", "]"}], "+", 
               RowBox[{"\[Rho]", "[", "t", "]"}]}], ")"}], " ", 
             TemplateBox[{"Inactive", 
               RowBox[{"a", "[", "t", "]"}], "t"},
              "InactiveD"]}], 
            RowBox[{"a", "[", "t", "]"}]], "+", 
           TemplateBox[{"Inactive", 
             RowBox[{"\[Rho]", "[", "t", "]"}], "t"},
            "InactiveD"]}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.886043474254982*^9},
 CellLabel->"OGRe:",ExpressionUUID->"7e37e494-16b7-47c7-aa92-c56fd7b2f46b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TCalcChristoffel"}]], "Input",
 CellChangeTimes->{{3.886209369629063*^9, 3.88620938447517*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"78b6f514-3b84-4d3a-86cf-f30a3d6b7d4d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TCalcChristoffel[\\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, \
False]], \\\"] calculates the Christoffel symbols (the coefficients of the \
Levi-Civita connection) from the metric \\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", StyleBox[\\\"metricID\\\", Bold, \
Rule[StripOnInput, False]], \\\"Christoffel\\\\\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\\\"}]], TextCell[Row[List[\\\"TCalcChristoffel[\\\", \
Style[\\\"metricID\\\", Bold], \\\"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \\\", \
Style[\\\"metricID\\\", Bold], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", Style[\\\"metricID\\\", Bold], \\\"Christoffel\\\
\\\\\". Note that the Christoffel symbols are not the components of a tensor, \
but this tensor object will know to transform according to the correct rules \
under change of coordinates.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    
                    RowBox[{
                    "TCalcChristoffel", "[", "OGRe`Private`metricID_String", 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"OGRe`Private`christoffelID", ",", 
                    RowBox[{"OGRe`Private`inverseMetricID", "=", 
                    RowBox[{"OGRe`Private`NewTempID", "[", "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`CheckIfTensorExists", "[", 
                    "OGRe`Private`metricID", "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Role\"", "]"}], 
                    "=!=", "\"Metric\""}], ",", 
                    RowBox[{
                    RowBox[{"Message", "[", 
                    StyleBox[
                    RowBox[{"TCalcChristoffel", "::", "ErrorNotMetric"}], 
                    "MessageName"], "]"}], ";", 
                    RowBox[{"Abort", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"OGRe`Private`SetTensorID", "[", 
                    RowBox[{"OGRe`Private`inverseMetricID", ",", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Components\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Components\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"DefaultCoords\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"DefaultCoords\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"DefaultIndices\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"\"Metric\"", "\[Rule]", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Metric\"", 
                    "]"}]}], ",", 
                    RowBox[{"\"Role\"", "\[Rule]", "\"Temporary\""}], ",", 
                    RowBox[{"\"Symbol\"", "\[Rule]", 
                    TemplateBox[{
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`TensorData", "[", 
                    "OGRe`Private`metricID", "]"}], "[", "\"Symbol\"", "]"}], 
                    "\"\[Lambda]\[Sigma]\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}]}], "]"}]}], "]"}], ";", 
                    RowBox[{"OGRe`Private`christoffelID", "=", 
                    RowBox[{"TCalc", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    
                    RowBox[{"OGRe`Private`metricID", "<>", 
                    "\"Christoffel\""}], ")"}], "[", 
                    "\"\[Lambda]\[Mu]\[Nu]\"", "]"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    
                    RowBox[{"OGRe`Private`inverseMetricID", "[", 
                    "\"\[Lambda]\[Sigma]\"", "]"}], ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Mu]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Nu]\[Sigma]\"",
                     "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Nu]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Sigma]\[Mu]\"",
                     "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"TPartialD", "[", "\"\[Sigma]\"", "]"}], ".", 
                    
                    RowBox[{"OGRe`Private`metricID", "[", "\"\[Mu]\[Nu]\"", 
                    "]"}]}]}], ")"}]}]}], ",", "\"\[CapitalGamma]\""}], 
                    "]"}]}], ";", 
                    RowBox[{"OGRe`Private`ChangeTensorKey", "[", 
                    
                    RowBox[{"OGRe`Private`christoffelID", ",", "\"Role\"", 
                    ",", "\"Christoffel\""}], "]"}], ";", 
                    
                    RowBox[{"Return", "[", "OGRe`Private`christoffelID", 
                    "]"}], ";"}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"OGRe`TCalcChristoffel\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*InterpretationBox[Cell[TextData[{\\\"\
TCalcChristoffel[\\\", StyleBox[\\\"metricID\\\", Bold, Rule[StripOnInput, \
False]], \\\"] calculates the Christoffel symbols (the coefficients of the \
Levi-Civita connection) from the metric \\\", StyleBox[\\\"metricID\\\", \
Bold, Rule[StripOnInput, False]], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", StyleBox[\\\"metricID\\\", Bold, \
Rule[StripOnInput, False]], \\\"Christoffel\\\\\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\\\"}]], TextCell[Row[List[\\\"TCalcChristoffel[\\\", \
Style[\\\"metricID\\\", Bold], \\\"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \\\", \
Style[\\\"metricID\\\", Bold], \\\" and stores the result in a new tensor \
object with ID \\\\\\\"\\\", Style[\\\"metricID\\\", Bold], \\\"Christoffel\\\
\\\\\". Note that the Christoffel symbols are not the components of a tensor, \
but this tensor object will know to transform according to the correct rules \
under change of coordinates.\\\"]]]]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*InterpretationBox[Cell[TextData[{\"TCalcChristoffel[\", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \"] calculates the \
Christoffel symbols (the coefficients of the Levi-Civita connection) from the \
metric \", StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \" and \
stores the result in a new tensor object with ID \\\"\", \
StyleBox[\"metricID\", Bold, Rule[StripOnInput, False]], \"Christoffel\\\". \
Note that the Christoffel symbols are not the components of a tensor, but \
this tensor object will know to transform according to the correct rules \
under change of coordinates.\"}]], TextCell[Row[List[\"TCalcChristoffel[\", \
Style[\"metricID\", Bold], \"] calculates the Christoffel symbols (the \
coefficients of the Levi-Civita connection) from the metric \", \
Style[\"metricID\", Bold], \" and stores the result in a new tensor object \
with ID \\\"\", Style[\"metricID\", Bold], \"Christoffel\\\". Note that the \
Christoffel symbols are not the components of a tensor, but this tensor \
object will know to transform according to the correct rules under change of \
coordinates.\"]]]]\)", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, OGRe`TCalcChristoffel, {OGRe`TCalcChristoffel[
         Pattern[OGRe`Private`metricID, 
          Blank[String]]] :> 
       Module[{OGRe`Private`christoffelID, OGRe`Private`inverseMetricID = 
          OGRe`Private`NewTempID[]}, 
         OGRe`Private`CheckIfTensorExists[OGRe`Private`metricID]; 
         If[OGRe`Private`TensorData[OGRe`Private`metricID]["Role"] =!= 
           "Metric", Message[
             MessageName[OGRe`TCalcChristoffel, "ErrorNotMetric"]]; Abort[]; 
           Null]; 
         OGRe`Private`SetTensorID[
          OGRe`Private`inverseMetricID, <|
           "Components" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["Components"], 
            "DefaultCoords" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["DefaultCoords"], 
            "DefaultIndices" -> {1, 1}, "Metric" -> 
            OGRe`Private`TensorData[OGRe`Private`metricID]["Metric"], "Role" -> 
            "Temporary", "Symbol" -> Superscript[
              OGRe`Private`TensorData[OGRe`Private`metricID]["Symbol"], 
              "\[Lambda]\[Sigma]"]|>]; OGRe`Private`christoffelID = OGRe`TCalc[
            (OGRe`Private`metricID <> "Christoffel")[
            "\[Lambda]\[Mu]\[Nu]"], (1/2) Dot[
              OGRe`Private`inverseMetricID["\[Lambda]\[Sigma]"], Dot[
                OGRe`TPartialD["\[Mu]"], 
                OGRe`Private`metricID["\[Nu]\[Sigma]"]] + Dot[
                OGRe`TPartialD["\[Nu]"], 
                OGRe`Private`metricID["\[Sigma]\[Mu]"]] - Dot[
               OGRe`TPartialD["\[Sigma]"], 
               OGRe`Private`metricID["\[Mu]\[Nu]"]]], "\[CapitalGamma]"]; 
         OGRe`Private`ChangeTensorKey[
          OGRe`Private`christoffelID, "Role", "Christoffel"]; 
         Return[OGRe`Private`christoffelID]; Null]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "OGRe`TCalcChristoffel"|>, False]]], "Output",
 CellChangeTimes->{3.886209384859151*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"4a8fea8d-c486-46a4-9f9d-6607281fb8a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TCalcChristoffel", "[", "\"\<Schwarzschild\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8862093873547773`*^9, 3.8862094187516513`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"aeaaba97-c952-45d6-9cc6-54e299f1c337"],

Cell[BoxData["\<\"SchwarzschildChristoffel\"\>"], "Output",
 CellChangeTimes->{{3.8862094055689573`*^9, 3.886209420619469*^9}},
 CellLabel->"Out[45]=",ExpressionUUID->"e6b941f0-c288-481b-971a-facc65dd5319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TList", "[", "\"\<SchwarzschildChristoffel\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8862094250675087`*^9, 3.886209450013839*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"1365112a-5502-4dd9-b441-ec15ba234d2b"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"SchwarzschildChristoffel\"", "\":\""},
       "RowDefault"]},
     {
      TagBox[GridBox[{
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                "\"t\"", "\"r\""}, "RowDefault"], 
              TemplateBox[{"\"t\"", 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                "\"r\"", "\"t\""}, "RowDefault"], 
              TemplateBox[{"\"t\"", 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox["M", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}]]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                "\"t\"", "\"t\""}, "RowDefault"], 
              TemplateBox[{"\"r\"", 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"t\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox[
           RowBox[{"M", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], 
           SuperscriptBox["r", "3"]]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                "\"r\"", "\"r\""}, "RowDefault"], 
              TemplateBox[{"\"r\"", 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox["M", 
           RowBox[{
            RowBox[{"2", " ", "M", " ", "r"}], "-", 
            SuperscriptBox["r", "2"]}]]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Theta]\"", "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{"\"r\"", 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "r"}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Phi]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"r\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False],
                 "\"r\"", "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Theta]\"", 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False],
                 "\"\[Theta]\"", "\"r\""}, "RowDefault"], 
              TemplateBox[{"\"\[Theta]\"", 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"r\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Phi]\"", "\"r\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"r\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          FractionBox["1", "r"]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False],
                 "\"\[Phi]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Theta]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}]},
         {
          TemplateBox[{"=", "\"=\"", 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Theta]\"", "\"\[Phi]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False]}, 
               "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox], 
            TemplateBox[{"\"\[CapitalGamma]\"", 
              TemplateBox[{
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                "\"\[Phi]\"", "\"\[Theta]\""}, "RowDefault"], 
              TemplateBox[{"\"\[Phi]\"", 
                StyleBox[
                "\"\[Phi]\"", ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                "\"\[Theta]\"", ShowContents -> False, StripOnInput -> 
                 False]}, "RowDefault"]}, "Subsuperscript", SyntaxForm -> 
             SubsuperscriptBox]},
           "RowWithSeparators"], "\<\"=\"\>", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"], "DisplayFormula",
  StripOnInput->False]], "Output",
 Editable->False,
 CellLabelStyle->Directive["CellLabel", Smaller, 
   RGBColor[0, 0, 1]],
 CellChangeTimes->{3.8862094504628735`*^9},
 CellLabel->"OGRe:",ExpressionUUID->"cc25ebf2-240a-403a-9def-a041c247a6a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"2", " ", 
        FractionBox[
         RowBox[{"G", " ", "M"}], "r"]}], "-", "1"}]], "]"}], ",", "r"}], 
   "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8862150843814993`*^9, 3.886215105601654*^9}, {
  3.886215356983472*^9, 3.886215399457013*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"6c66dd84-3738-44cd-ab5f-fcd193a9018f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    FractionBox["r", 
     RowBox[{
      RowBox[{"2", " ", "G", " ", "M"}], "-", "r"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SqrtBox["r"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "G", " ", "M"}], "+", "r"}], ")"}]}], "+", 
     RowBox[{"2", " ", "G", " ", "M", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"2", " ", "G", " ", "M"}], "-", "r"}]], " ", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        SqrtBox["r"], 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", "G", " ", "M"}], "-", "r"}]]], "]"}]}]}], ")"}]}], 
  SqrtBox["r"]]], "Output",
 CellChangeTimes->{
  3.886215106304212*^9, {3.8862153663128295`*^9, 3.886215399840189*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"af17226a-2c1b-486e-8144-a10326c49963"]
}, Open  ]]
},
WindowSize->{949, 461},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f9055227-9a2c-4559-a22f-a1e34d118c0d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e"->{
  Cell[29545, 739, 9667, 234, 82, "Print",ExpressionUUID->"3bcb9b30-94d7-487e-81e1-e35300978c94",
   CellTags->"Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e", 198854, 4609}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 304, 6, 28, "Input",ExpressionUUID->"8c799480-e33e-418b-8823-47b558cb35cd"],
Cell[887, 30, 5024, 128, 213, "Output",ExpressionUUID->"dc8eaa5c-b2cb-43c9-bea7-590e11e2b7f4"]
}, Open  ]],
Cell[5926, 161, 1832, 50, 133, "Input",ExpressionUUID->"653be590-d6d7-46df-8b3b-fb0624bc1968"],
Cell[CellGroupData[{
Cell[7783, 215, 198, 3, 28, "Input",ExpressionUUID->"3b8f3a23-4dc2-42dd-a5c0-e3a009444b98"],
Cell[7984, 220, 21558, 517, 400, "Output",ExpressionUUID->"59a2c52e-0c6a-4cde-a697-dc59830c4e2c"],
Cell[29545, 739, 9667, 234, 82, "Print",ExpressionUUID->"3bcb9b30-94d7-487e-81e1-e35300978c94",
 CellTags->"Info-2ab7e8c8-8c71-47c2-823c-4616767f3c3e"]
}, Open  ]],
Cell[39227, 976, 254, 5, 105, "Input",ExpressionUUID->"2afe19ec-b35b-4716-a847-b67cb87e52cb"],
Cell[CellGroupData[{
Cell[39506, 985, 361, 7, 28, "Input",ExpressionUUID->"1d6b9b00-8649-45dc-a18a-3710931decb1"],
Cell[39870, 994, 244, 4, 32, "Output",ExpressionUUID->"ccb3829d-bc14-49f8-8f60-f573b5478055"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40151, 1003, 453, 10, 31, "Input",ExpressionUUID->"98b208fa-ff80-4bc1-851c-1fe48b2f3c24"],
Cell[40607, 1015, 206, 3, 32, "Output",ExpressionUUID->"d6e305dc-337e-4142-8d7d-89533b36f475"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40850, 1023, 409, 8, 28, "Input",ExpressionUUID->"a08e3df7-e2b1-453b-bb6c-c430da5fbc82"],
Cell[41262, 1033, 212, 3, 32, "Output",ExpressionUUID->"e9b76850-5eeb-4140-9021-b94f6fcd624e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41511, 1041, 523, 11, 86, "Input",ExpressionUUID->"0ab1bbb5-36ed-4362-a387-b343a9ce1102"],
Cell[42037, 1054, 1066, 27, 53, "Output",ExpressionUUID->"59381a79-632f-4735-b3a3-29ff4a30fb87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43140, 1086, 252, 4, 28, "Input",ExpressionUUID->"bb969f5f-f41a-4e57-98d9-f2eb218b1cc5"],
Cell[43395, 1092, 2382, 53, 88, "Output",ExpressionUUID->"295f67cc-3d5d-4381-993e-dffe032bbe09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45814, 1150, 227, 3, 28, "Input",ExpressionUUID->"92fd06b6-7df6-421a-a85d-1903b84de5f5"],
Cell[46044, 1155, 3026, 71, 83, "Output",ExpressionUUID->"9858521a-91a8-4b61-b0c4-ec0d71c5d7aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49107, 1231, 250, 4, 28, "Input",ExpressionUUID->"57eaced7-e5dd-49a4-909d-08de44890495"],
Cell[49360, 1237, 254, 4, 32, "Output",ExpressionUUID->"c6d24662-4641-458d-90b4-a997096d8a26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49651, 1246, 276, 4, 28, "Input",ExpressionUUID->"bba9e254-bb78-4f7e-8836-313d91657575"],
Cell[49930, 1252, 253, 4, 32, "Output",ExpressionUUID->"f57063f7-ea07-455f-b0b4-981543d9babe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50220, 1261, 200, 3, 28, "Input",ExpressionUUID->"fa87ed96-1ba8-4d4c-9e51-5c60f5dfcba5"],
Cell[50423, 1266, 29554, 581, 309, "Output",ExpressionUUID->"74f82729-a5fe-4fc4-9469-897f6cb5471d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80014, 1852, 617, 15, 28, "Input",ExpressionUUID->"416a665b-bf91-4aae-9906-156b7e6a3742"],
Cell[80634, 1869, 1190, 30, 50, "Output",ExpressionUUID->"abac3e8f-138c-4ae0-a48e-6b5eed314ccb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81861, 1904, 332, 7, 28, "Input",ExpressionUUID->"4c695d39-f23e-4875-8589-838a6649149c"],
Cell[82196, 1913, 1245, 31, 50, "Output",ExpressionUUID->"018219be-7f3a-47af-a235-0c41ff5cc4ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83478, 1949, 628, 14, 28, "Input",ExpressionUUID->"dfb550ce-0008-4cfe-9371-1840dea06535"],
Cell[84109, 1965, 620, 17, 50, "Output",ExpressionUUID->"cfb95bb6-3948-4ef1-b662-175eae305ea2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84766, 1987, 537, 13, 28, "Input",ExpressionUUID->"31b2a541-4835-4ab7-9582-810b89158f79"],
Cell[85306, 2002, 470, 13, 35, "Output",ExpressionUUID->"6d851c9a-a9d2-4891-b2a7-28c83eaa9fd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85813, 2020, 805, 18, 28, "Input",ExpressionUUID->"7fe00efc-b4c0-47be-a1ae-7fff5f05bc6b"],
Cell[86621, 2040, 751, 13, 46, "Message",ExpressionUUID->"51773e58-c19b-4c68-b1d1-6e06374168f2"],
Cell[87375, 2055, 180, 2, 32, "Output",ExpressionUUID->"6b8da0c1-f1fe-431b-bd25-6b8f99edb316"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87592, 2062, 206, 3, 28, "Input",ExpressionUUID->"afdde443-d5fd-4741-b24e-fc39712c83bf"],
Cell[87801, 2067, 19898, 429, 147, "Output",ExpressionUUID->"3c225b7b-2e52-4e06-be25-404f290feaae"]
}, Open  ]],
Cell[107714, 2499, 280, 5, 124, "Input",ExpressionUUID->"556ab835-1de9-457d-8892-bd5658760596"],
Cell[CellGroupData[{
Cell[108019, 2508, 919, 24, 31, "Input",ExpressionUUID->"c12afbe7-9029-4f8c-81ea-42609a4917d8"],
Cell[108941, 2534, 191, 2, 32, "Output",ExpressionUUID->"560a8f47-ffc0-4e89-83ed-1203c0e0c68a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109169, 2541, 456, 7, 28, "Input",ExpressionUUID->"beae34ea-f7f4-4cfb-8218-9beb6ed77eb5"],
Cell[109628, 2550, 6181, 157, 146, "Output",ExpressionUUID->"8f4c29fd-5050-462b-afed-78514b3de5b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115846, 2712, 314, 5, 28, "Input",ExpressionUUID->"a01ea833-3714-4a68-8dd0-371a8df92f22"],
Cell[116163, 2719, 2408, 64, 68, "Output",ExpressionUUID->"581b2a65-3ac2-4fa2-a6ef-72b44c81b96b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118608, 2788, 575, 11, 28, "Input",ExpressionUUID->"6fe833ce-5465-49b9-b835-9c6ec899e346"],
Cell[119186, 2801, 5259, 135, 146, "Output",ExpressionUUID->"18aa720e-8f23-4cab-b874-597e39944672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124482, 2941, 581, 11, 28, "Input",ExpressionUUID->"6ab2d518-2638-4881-b672-70d11f9cfeb2"],
Cell[125066, 2954, 3664, 104, 157, "Output",ExpressionUUID->"7854a8b1-aaa5-441a-aaf5-c28fd32e6342"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128767, 3063, 199, 3, 28, "Input",ExpressionUUID->"cb235f4e-be09-4edc-8c99-35a103b83004"],
Cell[128969, 3068, 29554, 581, 309, "Output",ExpressionUUID->"dd93d566-dfe3-4e61-827e-11f4c2f70e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158560, 3654, 1166, 31, 74, "Input",ExpressionUUID->"0914fd2a-42c5-434a-b698-7a80b4caa533"],
Cell[159729, 3687, 175, 2, 32, "Output",ExpressionUUID->"77ebf29f-ebc1-4ef5-86e6-3541497b1d26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159941, 3694, 1121, 29, 74, "Input",ExpressionUUID->"448b8ae4-ef0a-4730-8d66-bd3896670868"],
Cell[161065, 3725, 162, 2, 32, "Output",ExpressionUUID->"e01d3ded-1189-4e9c-8aca-f43d021369ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161264, 3732, 243, 4, 28, "Input",ExpressionUUID->"811eb49b-ff23-4247-9dbf-be62f9c7afe9"],
Cell[161510, 3738, 1952, 46, 119, "Output",ExpressionUUID->"e9a5a141-b84a-4456-a2ba-066f4faaa607"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163499, 3789, 600, 12, 28, "Input",ExpressionUUID->"46fb66b6-95b8-42dc-b09d-2c6e1c20ce71"],
Cell[164102, 3803, 1790, 48, 61, "Output",ExpressionUUID->"7e37e494-16b7-47c7-aa92-c56fd7b2f46b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165929, 3856, 203, 3, 28, "Input",ExpressionUUID->"78b6f514-3b84-4d3a-86cf-f30a3d6b7d4d"],
Cell[166135, 3861, 19898, 429, 147, "Output",ExpressionUUID->"4a8fea8d-c486-46a4-9f9d-6607281fb8a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186070, 4295, 238, 3, 28, "Input",ExpressionUUID->"aeaaba97-c952-45d6-9cc6-54e299f1c337"],
Cell[186311, 4300, 206, 2, 32, "Output",ExpressionUUID->"e6b941f0-c288-481b-971a-facc65dd5319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186554, 4307, 236, 3, 28, "Input",ExpressionUUID->"1365112a-5502-4dd9-b441-ec15ba234d2b"],
Cell[186793, 4312, 10260, 235, 243, "Output",ExpressionUUID->"cc25ebf2-240a-403a-9def-a041c247a6a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197090, 4552, 490, 13, 55, "Input",ExpressionUUID->"6c66dd84-3738-44cd-ab5f-fcd193a9018f"],
Cell[197583, 4567, 873, 28, 88, "Output",ExpressionUUID->"af17226a-2c1b-486e-8144-a10326c49963"]
}, Open  ]]
}
]
*)

